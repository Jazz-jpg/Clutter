# Generated by Django 3.1.3 on 2020-11-22 22:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('idcontacts', models.IntegerField(db_column='idCONTACTS', primary_key=True, serialize=False)),
                ('contact_first_name', models.CharField(blank=True, db_column='CONTACT_FIRST_NAME', max_length=45, null=True)),
                ('contact_middle_name', models.CharField(blank=True, db_column='CONTACT_MIDDLE_NAME', max_length=45, null=True)),
                ('contact_last_name', models.CharField(blank=True, db_column='CONTACT_LAST_NAME', max_length=45, null=True)),
                ('contact_phone_num', models.IntegerField(blank=True, db_column='CONTACT_PHONE_NUM', null=True)),
                ('contact_note', models.CharField(blank=True, db_column='CONTACT_NOTE', max_length=255, null=True)),
                ('contact_location', models.CharField(blank=True, db_column='CONTACT_LOCATION', max_length=45, null=True)),
                ('contact_relationship', models.CharField(blank=True, db_column='CONTACT_RELATIONSHIP', max_length=45, null=True)),
                ('contact_birthday', models.DateField(blank=True, db_column='CONTACT_BIRTHDAY', null=True)),
                ('contact_email', models.CharField(blank=True, db_column='CONTACT_EMAIL', max_length=45, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('idevent', models.IntegerField(db_column='idEVENT', primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, db_column='EVENT_NAME', max_length=45, null=True)),
                ('event_location', models.CharField(blank=True, db_column='EVENT_LOCATION', max_length=45, null=True)),
                ('event_date', models.DateField(db_column='EVENT_DATE')),
                ('event_time', models.TimeField(blank=True, db_column='EVENT_TIME', null=True)),
                ('event_description', models.CharField(blank=True, db_column='EVENT_DESCRIPTION', max_length=45, null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Financial',
            fields=[
                ('idfinancial', models.DateTimeField(db_column='idFINANCIAL', primary_key=True, serialize=False)),
                ('fin_savings', models.FloatField(db_column='FIN_SAVINGS')),
                ('fin_expenses', models.FloatField(db_column='FIN_EXPENSES')),
                ('fin_earned_income', models.FloatField(db_column='FIN_EARNED_INCOME')),
            ],
            options={
                'db_table': 'financial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('idgroup_name', models.CharField(db_column='idGROUP_NAME', max_length=45, primary_key=True, serialize=False)),
                ('idmanages', models.CharField(db_column='idMANAGES', max_length=45)),
                ('group_user_fullname', models.CharField(blank=True, db_column='GROUP_USER_FULLNAME', max_length=45, null=True)),
                ('group_leader', models.IntegerField(blank=True, db_column='GROUP_LEADER', null=True)),
            ],
            options={
                'db_table': 'group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupEvents',
            fields=[
                ('idgroup_events', models.CharField(db_column='idGROUP_EVENTS', max_length=8, primary_key=True, serialize=False)),
                ('gs_event_name', models.CharField(blank=True, db_column='GS_EVENT_NAME', max_length=45, null=True)),
                ('gs_date', models.DateField(db_column='GS_DATE')),
                ('gs_time', models.TimeField(blank=True, db_column='GS_TIME', null=True)),
                ('gs_description', models.CharField(blank=True, db_column='GS_DESCRIPTION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'group_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupNotes',
            fields=[
                ('idgroup_notes', models.IntegerField(db_column='idGROUP_NOTES', primary_key=True, serialize=False)),
                ('gn_description', models.CharField(blank=True, db_column='GN_DESCRIPTION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'group_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('idgroup_name', models.CharField(db_column='idGROUP_NAME', max_length=45, primary_key=True, serialize=False)),
                ('idmanages', models.CharField(db_column='idMANAGES', max_length=45)),
                ('group_user_fullname', models.CharField(blank=True, db_column='GROUP_USER_FULLNAME', max_length=45, null=True)),
                ('group_leader', models.IntegerField(blank=True, db_column='GROUP_LEADER', null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupScheduling',
            fields=[
                ('idgroup_events', models.IntegerField(db_column='idGROUP_EVENTS', primary_key=True, serialize=False)),
                ('gs_event_name', models.CharField(blank=True, db_column='GS_EVENT_NAME', max_length=45, null=True)),
                ('gs_date', models.DateField(blank=True, db_column='GS_DATE', null=True)),
                ('gs_time', models.TimeField(blank=True, db_column='GS_TIME', null=True)),
                ('gs_description', models.CharField(blank=True, db_column='GS_DESCRIPTION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'group_scheduling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTasks',
            fields=[
                ('idgroup_tasks', models.IntegerField(db_column='idGROUP_TASKS', primary_key=True, serialize=False)),
                ('gt_description', models.CharField(blank=True, db_column='GT_DESCRIPTION', max_length=100, null=True)),
                ('gt_completion', models.IntegerField(blank=True, db_column='GT_COMPLETION', null=True)),
            ],
            options={
                'db_table': 'group_tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InspoQuote',
            fields=[
                ('idinspo_quote', models.IntegerField(db_column='idINSPO_QUOTE', primary_key=True, serialize=False)),
                ('inspo_description', models.CharField(blank=True, db_column='INSPO_DESCRIPTION', max_length=255, null=True)),
            ],
            options={
                'db_table': 'inspo_quote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('idmedia', models.IntegerField(db_column='idMEDIA', primary_key=True, serialize=False)),
                ('media_name', models.CharField(blank=True, db_column='MEDIA_NAME', max_length=45, null=True)),
                ('media_date_added', models.DateField(blank=True, db_column='MEDIA_DATE_ADDED', null=True)),
                ('media_type', models.CharField(blank=True, db_column='MEDIA_TYPE', max_length=5, null=True)),
            ],
            options={
                'db_table': 'media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('idmemo', models.IntegerField(db_column='idMEMO', primary_key=True, serialize=False)),
                ('memo_content', models.CharField(blank=True, db_column='MEMO_CONTENT', max_length=255, null=True)),
            ],
            options={
                'db_table': 'memo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shows',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epwatched', models.IntegerField(blank=True, db_column='EPWATCHED', null=True)),
                ('show_eptotal', models.IntegerField(blank=True, db_column='SHOW_EPTOTAL', null=True)),
                ('showscol', models.CharField(blank=True, db_column='SHOWScol', max_length=45, null=True)),
            ],
            options={
                'db_table': 'shows',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('idtasks', models.IntegerField(db_column='idTASKS', primary_key=True, serialize=False)),
                ('task_descriptoin', models.CharField(blank=True, db_column='TASK_DESCRIPTOIN', max_length=100, null=True)),
                ('task_check_deletion', models.IntegerField(blank=True, db_column='TASK_CHECK_DELETION', null=True)),
            ],
            options={
                'db_table': 'tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('iduser', models.CharField(db_column='idUSER', max_length=45, primary_key=True, serialize=False)),
                ('user_fullname', models.CharField(blank=True, db_column='USER_FULLNAME', max_length=45, null=True)),
                ('user_phone_number', models.IntegerField(blank=True, db_column='USER_PHONE_NUMBER', null=True)),
                ('user_email', models.CharField(db_column='USER_EMAIL', max_length=45)),
                ('user_password', models.CharField(db_column='USER_PASSWORD', max_length=45)),
                ('user_location', models.CharField(blank=True, db_column='USER_LOCATION', max_length=45, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_author', models.CharField(blank=True, db_column='BOOK_AUTHOR', max_length=45, null=True)),
                ('book_bookmark', models.IntegerField(blank=True, db_column='BOOK_BOOKMARK', null=True)),
                ('book_completion', models.IntegerField(blank=True, db_column='BOOK_COMPLETION', null=True)),
                ('media_idmedia', models.OneToOneField(db_column='MEDIA_idMEDIA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.media')),
            ],
            options={
                'db_table': 'book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('idgroup_name', models.OneToOneField(db_column='idGROUP_NAME', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.group')),
            ],
            options={
                'db_table': 'membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_length', models.TimeField(blank=True, db_column='MOVIE_LENGTH', null=True)),
                ('movie_director', models.CharField(blank=True, db_column='MOVIE_DIRECTOR', max_length=45, null=True)),
                ('movie_rating', models.CharField(blank=True, db_column='MOVIE_RATING', max_length=45, null=True)),
                ('movie_completed', models.IntegerField(blank=True, db_column='MOVIE_COMPLETED', null=True)),
                ('media_idmedia', models.OneToOneField(db_column='MEDIA_idMEDIA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.media')),
            ],
            options={
                'db_table': 'movie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('music_genre', models.CharField(blank=True, db_column='MUSIC_GENRE', max_length=45, null=True)),
                ('music_artist', models.CharField(blank=True, db_column='MUSIC_ARTIST', max_length=45, null=True)),
                ('music_album', models.CharField(blank=True, db_column='MUSIC_ALBUM', max_length=45, null=True)),
                ('media_idmedia', models.OneToOneField(db_column='MEDIA_idMEDIA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.media')),
            ],
            options={
                'db_table': 'music',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('epwatched', models.IntegerField(blank=True, db_column='EPWATCHED', null=True)),
                ('show_completed', models.IntegerField(blank=True, db_column='SHOW_COMPLETED', null=True)),
                ('show_eptotal', models.IntegerField(blank=True, db_column='SHOW_EPTOTAL', null=True)),
                ('media_idmedia', models.OneToOneField(db_column='MEDIA_idMEDIA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.media')),
            ],
            options={
                'db_table': 'show',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('idinspo_quote', models.OneToOneField(db_column='idINSPO_QUOTE', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clutter_db.inspoquote')),
            ],
            options={
                'db_table': 'view',
                'managed': False,
            },
        ),
    ]
